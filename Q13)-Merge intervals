class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        int n=intervals.size();
        sort(intervals.begin(), intervals.end());
        vector<vector<int>>ans;
        for(int i=0;i<n;i++)
        {
            if(ans.empty()) //if there is nothing to compare with
            {
                ans.push_back(intervals[i]);
            }
            else
            {
                vector<int> &v=ans.back(); //compare it with previous interval
                int y=v[1]; //ending of previous i
                if(intervals[i][0]<=y) //ending of previous i greater than starting of next i
                {
                    v[1]=max(y,intervals[i][1]); //if we have (1,3) and (2,6) so it will return (1,6) as max of(3,6) is 6
                }
                else{
                    ans.push_back(intervals[i]);
                }
            }
        }
        return ans;
    }
